# Workflow name
name: CI

# Controls when the action will run
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout the repository
      uses: actions/checkout@v2

    # Install dependencies
    - name: Install dependencies -> Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.14

    # Cache Trivy Database
    - name: Cache Trivy database
      uses: actions/cache@v2
      env:
        cache-name: trivy-cache
      with:
        path: ./tmp/dbcache/
        key: trivy-cache

    - name: Run Trivy
      run:  |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/install.sh | sh -s -- -b ./tmp
        ./tmp/trivy --exit-code 1 --severity CRITICAL --cache-dir ./tmp/dbcache/ docker.io/nahueloyha/tp-sr:${{ github.sha }} 
        
    # Build docker image
    - name: Build docker image
      run: docker build -t docker.io/nahueloyha/tp-sr:${{ github.sha }} .

    # 1.a) Dockerfile Linter -> HadoLint
    - name: "1.a) Dockerfile Linter -> HadoLint"
      uses: brpaz/hadolint-action@v1.1.0

    # 1.b) Image Scanning -> Trivy
    - name: "1.a) Image Scanning -> Trivy"
      uses: aquasecurity/trivy-action@0.0.7
      with:
        image-ref: 'docker.io/nahueloyha/tp-sr:${{ github.sha }}'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL' # FIX: quitar HIGH

    # 2.a) Secrets Detection -> TruffleHog
    - name: "2.a) Secrets Detection -> TruffleHog"
      uses: edplato/trufflehog-actions-scan@v0.9i-beta
      with: 
          scanArguments: "--regex --entropy=False --max_depth=1 --rules /regexes.json"

    # 2.b) Software Composition Analysis (SCA) -> Synk
    - name: "2.b) Software Composition Analysis (SCA) -> Synk"
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    
    # 2.c) Static Application Security Testing (SAST) -> SonarCloud
    - name: "2.c) Static Application Security Testing (SAST) -> SonarCloud"
      uses: SonarSource/sonarcloud-github-action@v1.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    # Push docker image
    - name: Push docker image
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: nahueloyha/sr-tp
        username: nahueloyha
        password: ${{ secrets.DOCKER_TOKEN }}
        tags: ${{ github.sha }}